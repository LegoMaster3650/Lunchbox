buildscript {
	repositories {
		// These repositories are only for Gradle plugins, put any other repositories in the repository block further below
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		mavenCentral()
		maven { url = 'https://maven.parchmentmc.org' }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath 'org.parchmentmc:librarian:1.+'
	}
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '2.0.0'
group = 'io._3650.lunchbox'
archivesBaseName = 'lunchbox_1.19.3'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'parchment', version: '2023.03.12-1.19.3'

	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'lunchbox'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				lunchbox {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'lunchbox'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				lunchbox {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'lunchbox'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				lunchbox {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			args '--mod', 'lunchbox', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				lunchbox {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		url 'https://cursemaven.com'
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	flatDir {
		dir '../PeekLib/build/libs'
	}
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.3-44.1.23'
	
	//Compile against api
	compileOnly fg.deobf("peeklib:peeklib_1.19.3:1.0.0:api")
	//Use full core for runtime
	runtimeOnly fg.deobf('peeklib:peeklib_1.19.3:1.0.0')
	
	//bring in appleskin because I need food value feedback
	runtimeOnly fg.deobf("curse.maven:appleskin-248787:3872808")
	//configured, catalogue, and better mods button to help stop my config nightmares
	runtimeOnly fg.deobf("curse.maven:configured-457570:4462839")
	runtimeOnly fg.deobf("curse.maven:catalogue-459701:4171025")
	runtimeOnly fg.deobf("curse.maven:better-mods-button-541584:4440670")
	//QOL mods because i am an impatient being who is spending 50% of my time developing this on a non-gaming laptop (and the other 50% on a gaming pc)
//	runtimeOnly fg.deobf("curse.maven:rubidium-574856:4167344")
	runtimeOnly fg.deobf("curse.maven:lazy-dfu-forge-460819:4327266")
	runtimeOnly fg.deobf("curse.maven:smooth-boot-reloaded-633412:4276252")
//	runtimeOnly fg.deobf("curse.maven:mouse-tweaks-60089:4226357")
	
	// compile against the JEI API but do not include it at runtime
	compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
	compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
	// at runtime, use the full JEI jar for Forge
	runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
	
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
	add sourceSets.main, 'lunchbox.refmap.json'
	config 'lunchbox.mixins.json'
	
	debug.verbose = true
	debug.export = true
	dumpTargetOnFailure = true
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "lunchbox",
				"Specification-Vendor"    : "LegoMaster3650",
				"Specification-Version"   : "1", // We are version 1 of ourselves
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "LegoMaster3650",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
